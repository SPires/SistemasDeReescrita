mod AlgUniX is

protecting NAT .

sorts Set Term .
subsorts Set < Term .

op Unv : -> Set .
op Emp : -> Set .
op c : Nat -> Set .
op _cup_ : Term Term -> Term .

vars X, Y : Nat .
vars T, U, V : Term .

rl [assoc] : (T cup U) cup V => T cup (U cup V) .

crl [comutA] : c(Y) cup (c(X) cup T) => c(X) cup (c(Y) cup T)
if X<Y .

crl [comut] : c(Y) cup c(X) => c(X) cup c(Y)
if X<Y .

rl [idemA] : c(X) cup (c(X) cup T) => c(X) cup T .

rl [idem] : c(X) cup c(X) => c(X) .

rl [univD] : T cup UNV => UNV .

rl [univE] : UNV cup T => UNV .

rl [emptD] : T cup EMP => T .

rl [emptE] : EMP cup T => T .

endm
